Project Title: TrackIt
Project Overview
TrackIt is a mobile order tracking application designed for real-time tracking using QR authentication and AI-powered preference predictions for window time and delivery speed. This system enables live tracking across all user roles and ensures smooth vendor-to-customer delivery.

User Roles & Dashboards
1️⃣ Customer – Places orders and tracks deliveries.
2️⃣ Vendor – Accepts or rejects orders and manages deliveries.
3️⃣ Delivery Partner – Scans QR codes to update order status.
Each user has a personalized dashboard to view and manage their interactions.

Core Features & Workflow
Step 1: Customer Creates an Order
- Select Vendor from a dropdown of registered businesses.
- Manually type order description (no predefined item selection).
- Select Window Time & Delivery Speed
- If the customer has 5+ successful orders, AI suggests the best choices.
- Otherwise, they manually select these options.
- Click "Place Order" – order appears in the Customer Dashboard as "Pending".

Step 2: Vendor Accepts or Rejects the Order
- Vendor Dashboard displays order requests.
- Vendor chooses "Accept" or "Reject":
- Accepted → Order status updates to "Accepted", and the process moves forward.
- Rejected → Order status updates to "Rejected" in the Customer Dashboard, and the process ends.

Step 3: QR Code Generation & Assignment
- If Accepted, a QR code is generated and saved in the Vendor Dashboard.
- This QR code is physically attached to the parcel.
- System auto-assigns a Delivery Partner to handle the delivery.

Step 4: Delivery Partner Scans the QR Code to Start Tracking
- Assigned Order appears in Delivery Partner Dashboard.
- Delivery Partner scans the QR code attached to the parcel: 1️⃣ First Scan → Updates status to "Dispatched" across all dashboards.
2️⃣ Second Scan → Updates status to "In Transit" across all dashboards.
3️⃣ Third Scan → Updates status to "Out for Delivery" across all dashboards.
After the third scan, a new unique QR code is generated in the Customer Dashboard.

Step 5: Final Delivery QR Scan & Confirmation
- Delivery Partner reaches the customer's location.
- Customer shows their final unique QR code displayed in their dashboard.
- Delivery Partner scans the final QR code.
- Order Status updates to "Delivered" across all dashboards.

Real-Time Tracking Across Dashboards
✔ Customer Dashboard: Pending → Accepted → Dispatched → In Transit → Out for Delivery → Delivered/Rejected.
✔ Vendor Dashboard: Order approvals, QR tracking, status updates.
✔ Delivery Partner Dashboard: Assigned orders, QR-based status updates.

Technical Implementation
Tech Stack
💻 Backend: Flask (Python) for managing authentication, database, and AI processing.
🌐 Frontend: React Native (Mobile) for a clean UI.
🗄️ Database: PostgreSQL/MongoDB to store orders, users, and preferences.
🔐 Authentication: JWT-based user access control.
🤖 AI Model: SVM using Scikit-Learn to predict window time and delivery speed.
📷 QR Code Integration: Python qrcode library for generation and scanning.
📡 WebSockets for Instant Order Updates: Ensures real-time tracking across dashboards without delays.

AI Model Training & Mock Data
✔ 10 Customers, each completing 10 successful orders → 100 total orders
✔ 5 Vendors, fulfilling customer orders → 100 accepted orders
✔ Only customers with 5+ successful orders receive AI-generated predictions
AI Prediction Workflow
- The SVM model learns patterns based on:
- Customer order history (time preferences & delivery speed choices).
- Vendor selection & order timestamps.
- Day-of-the-week ordering trends.
- AI activates only for customers with 5+ successful orders.

Indian Localization & User Experience
✔ Timestamps in IST (Indian Standard Time).
✔ Date format: DD/MM/YYYY.
✔ Currency: ₹ INR (Indian Rupees).
✔ Indian name & address format validation.
✔ Regional phone number formatting.

Optimization for Fast QR Scanning
🔹 Inspired by Google Pay’s QR speed:
- Auto-focus & real-time image recognition for instant scanning.
- Optimized detection algorithms ensure fast QR validation.
- WebSockets enable instant order updates after each scan.
🔹 QR Code Implementation:
- Vendors generate Package QR Codes upon order acceptance.
- Customers receive Final Delivery QR Codes after the third scan.

Project Goals
🚀 Seamless QR-based order tracking with real-time updates.
🤖 AI-driven delivery predictions for experienced customers.
📡 High-speed QR scanning with WebSockets for instant updates.
🌍 Localized experience for Indian users.

This is precisely how TrackIt should function—efficient, accurate, and optimized for real-time tracking.

